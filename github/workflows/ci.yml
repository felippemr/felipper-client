name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - id: set-matrix
        run: |
          versions=$(cat .python-version | sed '/^\s*$/d' | jq -R . | jq -s .)
          echo "Detected Python versions:"
          echo "$versions"
          echo "matrix={\"python-version\":$versions}" >> "$GITHUB_OUTPUT"

  build:
    needs: get-python-versions
    runs-on: ubuntu-latest

    strategy:
      matrix: ${{fromJson(needs.get-python-versions.outputs.matrix)}}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Set up virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          make install-dev

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest tests --junitxml=test-reports/results.xml

      - name: Run hooks
        run: |
          source venv/bin/activate
          make hooks

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ matrix.python-version }}
          path: test-reports
